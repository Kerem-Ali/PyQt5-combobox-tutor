# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'combobox_tutorial.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import matplotlib.pyplot as plt
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.figure import Figure
import numpy as np



from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(727, 572)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame_2 = QtWidgets.QFrame(self.frame)
        self.frame_2.setStyleSheet("QFrame{\n"
"background-color:rgb(85,85,127);\n"
"border:none;\n"
"padding:5px;\n"
"color:rgb(205,230,255);\n"
"border-top-left-radius:5px;\n"
"border-top-right-radius:5px;\n"
"font:75 14pt \"Candara\";\n"
"}")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame_2)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label = QtWidgets.QLabel(self.frame_2)
        self.label.setStyleSheet("")
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label)
        self.verticalLayout.addWidget(self.frame_2)
        self.frame_3 = QtWidgets.QFrame(self.frame)
        self.frame_3.setStyleSheet("QFrame{\n"
"background-color:rgb(170,170,255);\n"
"border:none;\n"
"padding:5px;\n"
"color:rgb(205,230,255);\n"
"border-bottom-left-radius:5px;\n"
"border-bottom-right-radius:5px;\n"
"font:75 14pt \"Candara\";\n"
"}")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.frame_6 = QtWidgets.QFrame(self.frame_3)
        self.frame_6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_6.setObjectName("frame_6")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_6)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_2 = QtWidgets.QLabel(self.frame_6)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_3.addWidget(self.label_2)
        self.horizontalLayout_2.addWidget(self.frame_6)
        self.frame_7 = QtWidgets.QFrame(self.frame_3)
        self.frame_7.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_7.setObjectName("frame_7")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_7)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.comboBox = QtWidgets.QComboBox(self.frame_7)
        self.comboBox.setStyleSheet("QComboBox{\n"
"background-color:rgb(85,85,127);\n"
"border:none;\n"
"padding:5px;\n"
"color:rgb(205,230,255);\n"
"border-radius:5px;\n"
"font:75 14pt \"Candara\";\n"
"}")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.verticalLayout_3.addWidget(self.comboBox)
        self.horizontalLayout_2.addWidget(self.frame_7)
        self.verticalLayout.addWidget(self.frame_3)
        self.frame_4 = QtWidgets.QFrame(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_4.sizePolicy().hasHeightForWidth())
        self.frame_4.setSizePolicy(sizePolicy)
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        # create a horizontal layout
        self.horizontalLayout_7=QtWidgets.QHBoxLayout(self.frame_4)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        # canvas here
        self.figure=plt.figure()
        self.canvas=FigureCanvas(self.figure)
        # end of canvas
        # add canvas
        self.horizontalLayout_7.addWidget(self.canvas)
        # end of horizontal layout

        self.verticalLayout.addWidget(self.frame_4)
        self.frame_5 = QtWidgets.QFrame(self.frame)
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.frame_5)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setSpacing(0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.pushButton = QtWidgets.QPushButton(self.frame_5,clicked=lambda:self.plotOnCanvas())
        self.pushButton.setStyleSheet("QPushButton{\n"
"background-color:rgb(85,85,127);\n"
"border:none;\n"
"padding:5px;\n"
"color:rgb(205,230,255);\n"
"border-radius:5px;\n"
"font:75 14pt \"Candara\";\n"
"}\n"
"QPushButton:hover{\n"
"background-color:rgb(170,170,255);\n"
"}\n"
"QPushButton:pressed{\n"
"background-color:rgb(85,85,127);\n"
"}")
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout_4.addWidget(self.pushButton)
        self.verticalLayout.addWidget(self.frame_5)
        self.horizontalLayout.addWidget(self.frame)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Fruits sold in 2021"))
        self.label_2.setText(_translate("MainWindow", "Type of fruit"))
        self.comboBox.setItemText(0, _translate("MainWindow", "Apple"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Orange"))
        self.comboBox.setItemText(2, _translate("MainWindow", "Coconut"))
        self.comboBox.setItemText(3, _translate("MainWindow", "Pawpaw"))
        self.pushButton.setText(_translate("MainWindow", "Click here to view graph"))
        
        #show graph by just clicking combobox items
        self.comboBox.activated.connect(self.plotOnCanvas)


    def plotOnCanvas(self):
        monthOfTheYear=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]
        #apple   --comboBox   index-0
        #orange  --comboBox   index-1
        #coconut --comboBox   index-2
        #pawpaw  --comboBox   index-3

        #for apple
        if self.comboBox.currentIndex()==0:
                #clear canvas
                self.figure.clear()
                values=np.array([200,100,80,90,67,45,70,100,35,76,87,98])
                print(values)
                #create bar plot
                plt.bar(monthOfTheYear,values,color="red",width=0.4)
                plt.xlabel("Month of the year")
                plt.ylabel("No of the apples")
                plt.title("Apples sold in 2021")
                #refresh canvas
                self.canvas.draw()
        
        #for orange
        if self.comboBox.currentIndex()==1:
                #clear canvas
                self.figure.clear()
                values=np.array([100,104,65,78,88,98,45,56,75,43,55,88])
                print(values)
                #create bar plot
                plt.bar(monthOfTheYear,values,color="orange",width=0.4)
                plt.xlabel("Month of the year")
                plt.ylabel("No of the oranges")
                plt.title("Oranges sold in 2021")
                #refresh canvas
                self.canvas.draw()
        
        #for coconut
        if self.comboBox.currentIndex()==2:
                #clear canvas
                self.figure.clear()
                values=np.array([45,98,67,56,87,46,67,55,97,91,54,33])
                print(values)
                #create bar plot
                plt.bar(monthOfTheYear,values,color="brown",width=0.4)
                plt.xlabel("Month of the year")
                plt.ylabel("No of the coconuts")
                plt.title("Coconuts sold in 2021")
                #refresh canvas
                self.canvas.draw()

        #for pawpaw
        if self.comboBox.currentIndex()==3:
                #clear canvas
                self.figure.clear()
                values=np.array([45,67,34,46,90,76,63,28,90,47,22,54])
                print(values)
                #create bar plot
                plt.bar(monthOfTheYear,values,color="yellow",width=0.4)
                plt.xlabel("Month of the year")
                plt.ylabel("No of the pawpaws")
                plt.title("Pawpaws sold in 2021")
                #refresh canvas
                self.canvas.draw()









if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
